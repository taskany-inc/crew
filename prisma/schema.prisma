generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                       String  @id @default(nanoid())
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String?
  refresh_token_expires_in Int?
  access_token             String?
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?
  session_state            String?
  oauth_token_secret       String?
  oauth_token              String?
  password                 String?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId                   String

  createdAt DateTime @default(dbgenerated("timezone('utc', current_timestamp)")) @db.Timestamp()
  updatedAt DateTime @default(dbgenerated("timezone('utc', current_timestamp)")) @updatedAt

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(nanoid())
  accessToken  String   @unique
  sessionToken String   @unique
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String

  createdAt DateTime @default(dbgenerated("timezone('utc', current_timestamp)")) @db.Timestamp()
  updatedAt DateTime @default(dbgenerated("timezone('utc', current_timestamp)")) @updatedAt
}

model VerificationToken {
  id         String   @id @default(nanoid())
  identifier String
  token      String   @unique
  expires    DateTime

  createdAt DateTime @default(dbgenerated("timezone('utc', current_timestamp)")) @db.Timestamp()
  updatedAt DateTime @default(dbgenerated("timezone('utc', current_timestamp)")) @updatedAt

  @@unique([identifier, token])
}

model User {
  id            String    @id @default(nanoid())
  active        Boolean   @default(true)
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  createdAt DateTime @default(dbgenerated("timezone('utc', current_timestamp)")) @db.Timestamp()
  updatedAt DateTime @default(dbgenerated("timezone('utc', current_timestamp)")) @updatedAt
}
